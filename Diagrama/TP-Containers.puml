@startuml

title ** Diseño TP **

class Barco{
   - id: Integer
   - maxConteiners: Integer
   - maxPeso : Double 
   - conteiner : ArrayList<Contenedor>

   + getId(): Integer 
   + setId(Integer): void
   + getMaxConteiners(): Integer 
   + setMaxConteiners(Integer): void
   + getMaxPeso(): Double
   + setMaxPeso(Double): void
   + getContenedor(): Contenedor
   + setContenedor(Contenedor): void
   
   + cargar() 'valida carga segun tipo de contenedor
   + descargar()
}

Barco <|-- BarcoBasico
Barco o-- Contenedor

class BarcoBasico{

}

class BarcoCompleto{

}

class Camion{
   - MAX_CAMIONES : 5
   - patente: String 
   - costoFijo : double 20000 
   - conteiner : Contenedor 

   + getPatente(): String
   + setPatente(String): void
   + getCostoFijo(): Double 
   + setCostoFijo(Double): void
   + getContenedor(): Contenedor
   + setContenedor(Contenedor): void

   + llevaConteiner(): boolean
   + calcularMonto(): Double
}

Camion <-- Contenedor

abstract Class Contenedor{
   - id
   - exterior
   - interior
   - pies 
   - maxPeso
   - maxVolumen
   - precioBase
   
   + getId(): String 
   + setId(String): void
   + getExterior(): Exterior
   + setExterior(Exterior): void
   + getInterior(): Interior
   + getMaxPeso(): Double
   + setMaxPeso(Double): void
   + getMaxVolumen(): Double
   + setMaxVolumen(Double): void 

   + calcularPrecio(): Double 
}


Contenedor <|-- Basico
Contenedor <|-- BasicoHC
Contenedor <|-- FlatRack
Contenedor <-- Exterior
Contenedor <-- Interior

Class Basico{

}

Class BasicoHC{

} 

Class FlatRack{

}

class ContenedorEspecial{
   duda???
}

Class Exterior{
   - exteriorAncho
   - exteriorAlto
   - exteriorLargo
}

Class Interior{
   - interiorAlto
   - interiorAncho
   - interiorLargo
}


class Dudas{ 
   - Conteiner Especial aparte o tipo ?¡?¡
   - Mecanica gruas, hay que separar??
   -  
}
@enduml