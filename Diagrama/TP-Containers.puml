@startuml

title ** Diseño TP **

class Barco{
   - id: Integer
   - maxConteiners: Integer
   - maxPeso : Double 
   - conteiner : ArrayList<Contenedor>
   - sedeInicial
   - sedeFinal 
   - kmRecorridos 

   + getId(): Integer 
   + setId(Integer): void
   + getMaxConteiners(): Integer 
   + setMaxConteiners(Integer): void
   + getMaxPeso(): Double
   + setMaxPeso(Double): void
   + getContenedor(): Contenedor
   + setContenedor(Contenedor): void
   
   + cargar() 'valida carga segun tipo de contenedor
   + descargar()
}

Barco <|-- BarcoBasico
Barco <|-- BarcoCompleto
Barco <-- Contenedor

class BarcoBasico{

}

class BarcoCompleto{

}

class Camion{
   - patente: String 
   - costoFijo : double 20000 
   - conteiner : Contenedor 

   + getPatente(): String
   + setPatente(String): void
   + getCostoFijo(): Double 
   + setCostoFijo(Double): void
   + getContenedor(): Contenedor
   + setContenedor(Contenedor): void

   + llevaConteiner(): boolean
   + calcularMonto(): Double
}

Camion <-- Contenedor

abstract Class Contenedor{
   - id: Integer 
   - exterior: Medida 
   - interior: Medida  
   - pies: Integer 
   - maxPeso: Double 
   - maxVolumen: Double 
   - precioBase: Double
   - hayEspacio : boolean 

   + getId(): String 
   + setId(String): void
   + getExterior(): Exterior
   + setExterior(Exterior): void
   + getInterior(): Interior
   + getMaxPeso(): Double
   + setMaxPeso(Double): void
   + getMaxVolumen(): Double
   + setMaxVolumen(Double): void 
   + getPrecioBase(): Double
   + setPrecioBase(Double): void
   + getPies(): Integer 
   + setPies(Integer): void 
   
   + calcularPrecio(): Double 
   + calcularEspacio(): 
}


Contenedor <|-- Basico
Contenedor <|-- BasicoHC
Contenedor <|-- FlatRack
Contenedor <|-- ContenedorEspecial
Contenedor <-- Medida
Medida <|-- Exterior 
Medida <|-- Interior

Class Basico{

}

Class BasicoHC{

} 

Class FlatRack{

}

class ContenedorEspecial{
   duda???
}

Class Medida{
   - ancho: Double 
   - alto: Double 
   - largo: Double 
  
   + getAncho(): Double 
   + setAncho(Double): void
   + getLargo(): Double 
   + setLargo(Double): void 
   + getAlto(): Double 
   + setAlto(Double): void
}

class Cliente{
   - nombre
   - dni
   - nroCliente 
   
   + getNombre(): String 
   + setNombre(String): void
   + getDni(): Integer 
   + setDni(Integer): void
   + getNroCliente(): Integer 
   + setNroCliente(Integer): void

}

class Despacho{
   - Cliente : Cliente 
   - retiro: boolean 
   - conteinerCompleto: boolean  
   - Container : Container 
   - Barcos: ArrayList<Barco>
   - Camiones: ArrayList<Camion>

   + getCliente(): Cliente 
   + setCliente(Cliente): void
   + setRetiro(boolean): void
   + setConteinerCompleto(boolean): void
   + getRetiro(): boolean
}

Despacho <-- Cliente
Despacho o-- Camion
Despacho <-- Barco
Despacho <-- Contenedor

class Dudas{ 
   - Conteiner Especial aparte o tipo ?¡?¡
   - Mecanica gruas, hay que separar??
   - Completa un cliente o varios
   -
}

note as n1 
 Dudas x 
end note
@enduml